on:
  push:
    branches: [ buildx ]
    paths-ignore:
    - "README.md"
    - "LICENCE.md"
    - ".gitignore"
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - version: "7.2"
          variant: "fpm"
          source_image: "php:7.2.32-fpm-alpine3.12"
        - version: "7.2"
          variant: "cli"
          source_image: "php:7.2.32-zts-alpine3.12"
        - version: "7.3"
          variant: "fpm"
          source_image: "php:7.3.20-fpm-alpine3.12"
        - version: "7.3"
          variant: "cli"
          source_image: "php:7.3.20-zts-alpine3.12"
        - version: "7.4"
          variant: "fpm"
          source_image: "php:7.4.8-fpm-alpine3.12"
        - version: "7.4"
          variant: "cli"
          source_image: "php:7.4.8-zts-alpine3.12"
        - version: "8.0"
          variant: "fpm"
          source_image: "php:8.0.0alpha2-fpm-alpine3.12"
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: docker/setup-qemu-action@v1

    - name: build
      uses: docker/build-push-action@v2
      with:
        context: .
        build-args: |
          IMAGE=${{ matrix.source_image }}
#        tags:
#          build/php:${{ matrix.version }}-${{ matrix.variant }}
        outputs: |
          type=tar,dest=/tmp/docker-image-${{ matrix.version }}-${{ matrix.variant }}.tar

    - name: import image
      run: |
        docker import /tmp/docker-image-${{ matrix.version }}-${{ matrix.variant }}.tar build/php:${{ matrix.version }}-${{ matrix.variant }}

#    - name: build (nginx)
#      uses: docker/build-push-action@v2
#      if: "matrix.variant == 'fpm'"
#      with:
#        context: .
#        file: Dockerfile-nginx
#        build-args: |
#          IMAGE=build/php:${{ matrix.version }}-${{ matrix.variant }}
##        tags:
##          build/php:${{ matrix.version }}-nginx
#        outputs: |
#          type=tar,dest=/tmp/docker-image-${{ matrix.version }}-nginx.tar

    - name: build composer
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile-composer
        build-args: |
          IMAGE=build/php:${{ matrix.version }}-${{ matrix.variant }}
#        tags:
#          build/php:${{ matrix.version }}-${{ matrix.variant }}
        outputs: |
          type=tar,dest=/tmp/docker-image-${{ matrix.version }}-${{ matrix.variant }}.tar

#    - name: build composer (nginx)
#      if: "matrix.variant == 'fpm'"
#      uses: docker/build-push-action@v2
#      with:
#        context: .
#        file: Dockerfile-composer
#        build-args: |
#          IMAGE=build/php:${{ matrix.version }}-nginx
#        outputs: |
#          type=tar,dest=/tmp/docker-image-${{ matrix.version }}-${{ matrix.variant }}.tar

#    - name: save images
#      run: |
#        images=()
#        images+=("build/php:${{ matrix.version }}-${{ matrix.variant }}")
#        images+=("build/php:${{ matrix.version }}-${{ matrix.variant }}-composer")
#
#        if [ "${{ matrix.variant }}" = "fpm" ]; then
#          images+=("build/php:${{ matrix.version }}-nginx")
#          images+=("build/php:${{ matrix.version }}-nginx-composer")
#        fi
#
#        docker save -o /tmp/images.tar "${images[@]}"

    - name: upload artifacts
      uses: actions/upload-artifact@v2
      with:
        if-no-files-found: error
        retention-days: 1
        name: ${{ matrix.version }}-${{ matrix.variant }}
        path: /tmp/docker-image-*.tar

#  test-platforms:
#    runs-on: ubuntu-latest
#    if: "github.ref == 'refs/heads/buildx'"
#    needs: [ build ]
#    strategy:
#      matrix:
#        version:
#        - "7.2"
#        - "7.3"
#        - "7.4"
#        - "8.0"
#        variant:
#        - "fpm"
#        include:
#        - version: "7.2"
#          variant: "cli"
#        - version: "7.3"
#          variant: "cli"
#        - version: "7.4"
#          variant: "cli"
#    steps:
#    - name: download image
#      uses: actions/download-artifact@v2
#      with:
#        name: ${{ matrix.version }}-${{ matrix.variant }}
#        path: /tmp
#
#    - name: load image
#      run: docker load -i /tmp/images.tar
  push:
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/master'"
    needs: [ build ]
    strategy:
      matrix:
        version:
        - "7.2"
        - "7.3"
        - "7.4"
        - "8.0"
        variant:
        - "fpm"
        include:
        - version: "7.2"
          variant: "cli"
        - version: "7.3"
          variant: "cli"
        - version: "7.4"
          variant: "cli"
    steps:
    - name: log in (docker hub)
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_LOGIN }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: download image
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.version }}-${{ matrix.variant }}
        path: /tmp

    - name: load image
      run: docker load -i /tmp/images.tar

    - name: tag variant
      run: |
        docker tag \
          build/php:${{ matrix.version }}-${{ matrix.variant }} \
          ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}

        docker tag \
          build/php:${{ matrix.version }}-${{ matrix.variant }}-composer \
          ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}-composer

    - name: tag nginx
      if: "matrix.variant == 'fpm'"
      run: |
        docker tag \
          build/php:${{ matrix.version }}-nginx \
          ${{ github.repository_owner }}/php:${{ matrix.version }}-nginx

        docker tag \
          build/php:${{ matrix.version }}-nginx-composer \
          ${{ github.repository_owner }}/php:${{ matrix.version }}-nginx-composer

    - name: push variant
      run: |
        docker push ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        docker push ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}-composer

    - name: push nginx
      if: "matrix.variant == 'fpm'"
      run: |
        docker push ${{ github.repository_owner }}/php:${{ matrix.version }}-nginx
        docker push ${{ github.repository_owner }}/php:${{ matrix.version }}-nginx-composer
