on:
  push:
    branches: [ master ]
    paths-ignore:
    - "README.md"
    - "LICENCE.md"
    - ".gitignore"
jobs:
  # Current matrix:
  #
  # include:
  # - version: "7.2"
  #   variant: "fpm"
  #   source_image: "php:7.2.34-fpm-alpine3.12"
  # - version: "7.2"
  #   variant: "cli"
  #   source_image: "php:7.2.34-zts-alpine3.12"
  # - version: "7.3"
  #   variant: "fpm"
  #   source_image: "php:7.3.26-fpm-alpine3.12"
  # - version: "7.3"
  #   variant: "cli"
  #   source_image: "php:7.3.26-zts-alpine3.12"
  # - version: "7.4"
  #   variant: "fpm"
  #   source_image: "php:7.4.14-fpm-alpine3.12"
  # - version: "7.4"
  #   variant: "cli"
  #   source_image: "php:7.4.14-zts-alpine3.12"
  # - version: "8.0"
  #   variant: "fpm"
  #   source_image: "php:8.0.1-fpm-alpine3.12"
  #
  # To convert this to stringified JSON for use in the "matrix" job, paste the list above into matrix.yml, and run the
  # following command:
  #
  #   yq r -j matrix.yml | jq -c '.|@json' | awk '{print substr($0, 2, length($0) - 2)}'
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: set matrix
      id: set-matrix
      run: |
        echo "::set-output name=matrix::{\"include\":[{\"version\":\"7.2\",\"variant\":\"fpm\",\"source_image\":\"php:7.2.34-fpm-alpine3.12\"},{\"version\":\"7.2\",\"variant\":\"cli\",\"source_image\":\"php:7.2.34-zts-alpine3.12\"},{\"version\":\"7.3\",\"variant\":\"fpm\",\"source_image\":\"php:7.3.26-fpm-alpine3.12\"},{\"version\":\"7.3\",\"variant\":\"cli\",\"source_image\":\"php:7.3.26-zts-alpine3.12\"},{\"version\":\"7.4\",\"variant\":\"fpm\",\"source_image\":\"php:7.4.14-fpm-alpine3.12\"},{\"version\":\"7.4\",\"variant\":\"cli\",\"source_image\":\"php:7.4.14-zts-alpine3.12\"},{\"version\":\"8.0\",\"variant\":\"fpm\",\"source_image\":\"php:8.0.1-fpm-alpine3.12\"}]}"

  build:
    needs: [matrix]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
    - uses: actions/cache@v2
      with:
        path: .buildx-cache
        key: ${{ matrix.version }}-${{ matrix.variant }}-${{ github.sha }}
        restore-keys: ${{ matrix.version }}-${{ matrix.variant }}-
    - name: build variant
      uses: docker/build-push-action@v2
      with:
        context: .
        build-args: IMAGE=${{ matrix.source_image }}
        tags: ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        outputs: type=local,dest=.buildx-output/main
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        cache-to: type=local,dest=.buildx-cache/main,mode=max
        cache-from: type=local,src=.buildx-cache/main
    - name: build nginx
      uses: docker/build-push-action@v2
      if: "matrix.variant == 'fpm'"
      with:
        context: .
        file: Dockerfile-nginx
        build-args: IMAGE=${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        tags: ${{ github.repository_owner }}/php:${{ matrix.version }}-nginx
        outputs: type=local,dest=.buildx-output/nginx
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        cache-to: type=local,dest=.buildx-cache/nginx,mode=max
        cache-from: type=local,src=.buildx-cache/nginx

  push:
    needs: [build, matrix]
    if: "github.ref == 'refs/heads/master'"
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
    - name: log in (docker hub)
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_LOGIN }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    - uses: actions/cache@v2
      with:
        path: .buildx-cache
        key: ${{ matrix.version }}-${{ matrix.variant }}-${{ github.sha }}
        restore-keys: ${{ matrix.version }}-${{ matrix.variant }}-
    - name: build variant
      uses: docker/build-push-action@v2
      with:
        build-args: IMAGE=${{ matrix.source_image }}
        tags: ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        outputs: type=registry
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        cache-from: type=local,src=.buildx-cache/main
    - name: build nginx
      uses: docker/build-push-action@v2
      if: "matrix.variant == 'fpm'"
      with:
        file: Dockerfile-nginx
        build-args: IMAGE=${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        tags: ${{ github.repository_owner }}/php:${{ matrix.version }}-nginx
        outputs: type=registry
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        cache-from: type=local,src=.buildx-cache/nginx
